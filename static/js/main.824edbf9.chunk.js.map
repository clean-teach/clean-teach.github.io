{"version":3,"sources":["utils/asuncActionUtils.js","utils/api.js","contexts/api-integrate/UsersContext.js","components/api-integrate/User.js","components/api-integrate/Users.js","contexts/todo-list/TodoContext.js","components/todo-list/TodoCreate.js","components/todo-list/TodoHead.js","components/todo-list/TodoItem.js","components/todo-list/TodoList.js","components/todo-list/TodoTemplate.tsx","components/todo-list/TodoListPractise.tsx","App.tsx","index.tsx"],"names":["createAsyncDispatcher","type","promiseFn","SUCCESS","ERROR","dispatch","a","rest","data","error","initialAsyncState","loading","loadingState","createAsyncHandler","key","state","action","axios","get","response","id","initialState","users","user","usersHandler","userHandler","usersReducer","Error","UsersStateContext","createContext","UsersDispatchContext","UsersProvider","children","useReducer","Provider","value","useUsersState","useContext","useUsersDispatch","getUsers","getUser","User","useEffect","name","email","Users","useState","userId","setUserId","fetchData","map","onClick","style","cursor","username","initialTodos","text","done","todoReducer","concat","todo","filter","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","nextId","useRef","useTodoState","context","useTodoDispatch","CircleButton","styled","button","props","open","css","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","TodoItemBlock","CheckCicle","Text","TodoItem","React","memo","TodoListBlock","TodoList","todos","TodoTemplateBlock","TodoTemplate","GlobalStyle","createGlobalStyle","TodoListPractise","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.824edbf9.chunk.js","sourcesContent":["export default function createAsyncDispatcher(type, promiseFn) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const ERROR = `${type}_ERROR`;\r\n\r\n    return async function actionHandler(dispatch, ...rest) {\r\n        dispatch({ type });\r\n        try {\r\n            const data = await promiseFn(...rest);\r\n            dispatch({\r\n                type: SUCCESS, \r\n                data\r\n            });\r\n        } catch (e) {\r\n            dispatch({\r\n                type: ERROR, \r\n                error: e \r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const initialAsyncState = {\r\n    loading: false,\r\n    data: null,\r\n    error: null\r\n};\r\n\r\nconst loadingState = {\r\n    loading: true,\r\n    data: null,\r\n    error: null\r\n};\r\nconst success = data => ({\r\n    loading: false,\r\n    data,\r\n    error: null\r\n});\r\nconst error = error => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n});\r\n\r\nexport function createAsyncHandler(type, key) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const ERROR = `${type}_ERROR`;\r\n\r\n    return function reducer(state, action) {\r\n        switch (action.type) {\r\n            case type:\r\n                return {\r\n                    ...state,\r\n                    [key]: loadingState\r\n                };\r\n            case SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    [key]: success(action.data)\r\n                };\r\n            case ERROR:\r\n                return {\r\n                    ...state,\r\n                    [key]: error(action.error)\r\n                };\r\n            default:\r\n                throw state;\r\n        }\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport async function getUsers() {\r\n    const response = await axios.get(\r\n        'https://jsonplaceholder.typicode.com/users'\r\n    );\r\n    return response.data;\r\n}\r\n\r\nexport async function getUser(id) {\r\n    const response = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    return response.data;\r\n}","import React, { createContext, useContext, useReducer } from 'react';\r\nimport createAsyncDispatcher, { createAsyncHandler, initialAsyncState } from '../../utils/asuncActionUtils';\r\nimport * as api from '../../utils/api'\r\n\r\nconst initialState = {\r\n    users: initialAsyncState,\r\n    user: initialAsyncState\r\n};\r\nconst usersHandler = createAsyncHandler('GET_USERS', 'users');\r\nconst userHandler = createAsyncHandler('GET_USER', 'user');\r\n\r\nfunction usersReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'GET_USERS':\r\n        case 'GET_USERS_SUCCESS':\r\n        case 'GET_USERS_ERROR':\r\n            return usersHandler(state, action);\r\n        case 'GET_USER':\r\n        case 'GET_USER_SUCCESS':\r\n        case 'GET_USER_ERROR':\r\n            return userHandler(state, action);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst UsersStateContext = createContext(null);\r\nconst UsersDispatchContext = createContext(null);\r\n\r\nexport function UsersProvider({children}) {\r\n    const [state, dispatch] = useReducer(usersReducer, initialState);\r\n    return (\r\n        <UsersStateContext.Provider value={state}>\r\n            <UsersDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </UsersDispatchContext.Provider>\r\n        </UsersStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useUsersState() {\r\n    const state = useContext(UsersStateContext);\r\n    if(!state) {\r\n        throw new Error('Cannot find UsersProvider');\r\n    }\r\n    return state;\r\n}\r\nexport function useUsersDispatch() {\r\n    const dispatch = useContext(UsersDispatchContext);\r\n    if(!dispatch) {\r\n        throw new Error('Cannot find UsersProvider');\r\n    }\r\n    return dispatch;\r\n}\r\n\r\nexport const getUsers = createAsyncDispatcher('GET_USERS', api.getUsers);\r\nexport const getUser = createAsyncDispatcher('GET_USER', api.getUser);","import { useEffect } from \"react\";\r\nimport { getUser, useUsersDispatch, useUsersState } from \"../../contexts/api-integrate/UsersContext\";\r\n\r\nfunction User({id}) {\r\n    const state = useUsersState();\r\n    const dispatch = useUsersDispatch();\r\n    useEffect(() => {\r\n        getUser(dispatch, id);\r\n    }, [dispatch, id]);\r\n\r\n    const {loading, data: user, error} = state.user;\r\n\r\n    if(loading) return <div>로딩중..</div>;\r\n    if(error) return <div>에러가 발생했습니다</div>;\r\n    if(!user) return null;\r\n\r\n    return (\r\n    <>\r\n        <div>\r\n            <h2>{user.name}</h2>\r\n            <p>\r\n                <b>Email : </b>{user.email}\r\n            </p>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default User;","import { useState } from 'react';\r\nimport { getUsers, useUsersDispatch, useUsersState } from '../../contexts/api-integrate/UsersContext';\r\nimport User from './User';\r\n\r\nfunction Users() {\r\n    const [userId, setUserId] = useState(null);\r\n    const state = useUsersState();\r\n    const dispatch = useUsersDispatch();\r\n\r\n    const {loading, data: users, error} = state.users;\r\n    const fetchData = () => {\r\n        getUsers(dispatch)\r\n    };\r\n\r\n    if(loading) return <div>로딩중..</div>;\r\n    if(error) return <div>에러가 발생했습니다</div>;\r\n    if(!users) return <button onClick={fetchData}>불러오기</button>;\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {users.map(user => (\r\n                    <li\r\n                        key={user.id}\r\n                        onClick = {() => setUserId(user.id)}\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        {user.username} ({user.name})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={fetchData}>다시 불러오기</button>\r\n            {userId && <User id={userId} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Users;","import React, { createContext, useContext, useReducer, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        text: '프로젝트 생성하기',\r\n        done: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: '컴포넌트 스타일링하기',\r\n        done: true\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Context 만들기',\r\n        done: true\r\n    },\r\n    {\r\n        id: 4,\r\n        text: '기능 구현하기',\r\n        done: false\r\n    }\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(todo => \r\n                todo.id === action.id ? {...todo, done: !todo.done} : todo\r\n            );\r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({children}){\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(5);\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>\r\n                    {children}\r\n                </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if(!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\nexport function useTodoDispatch() {\r\n    const context = useContext(TodoDispatchContext);\r\n    if(!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\nexport function useTodoNextId() {\r\n    const context = useContext(TodoNextIdContext);\r\n    if(!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}","import React, { useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport styled, { css } from 'styled-components';\r\nimport { useTodoDispatch, useTodoNextId } from '../../contexts/todo-list/TodoContext';\r\n\r\nconst CircleButton = styled.button`\r\n    background-color: #38d9a9;\r\n    &:hover {\r\n        background-color: #63e6be;\r\n    }\r\n    &:active {\r\n        background-color: #20c997;\r\n    }\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    transition: .125s all ease-in;\r\n    ${props => props.open && css`\r\n        background-color: #ff6b6b;\r\n        &:hover {\r\n            background-color: #ff8787;\r\n        }\r\n        &:active {\r\n            background-color: #fa5252;\r\n        }\r\n        transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\nconst InsertForm = styled.form`\r\n    background-color: #f8f9fa;\r\n    padding: 32px 32px 72px;\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false\r\n            }\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n    return (\r\n    <>\r\n        {open && (\r\n            <InsertFormPositioner>\r\n                <InsertForm onSubmit={onSubmit}>\r\n                    <Input autoFocus placeholder=\"할 일을 입력 후, Enter 를 누르세요\" onChange={onChange} value={value} />\r\n                </InsertForm>\r\n            </InsertFormPositioner>\r\n        )}\r\n        <CircleButton onClick={onToggle} open={open}>\r\n            <MdAdd />\r\n        </CircleButton>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default TodoCreate;","import styled from 'styled-components';\r\nimport { useTodoState } from '../../contexts/todo-list/TodoContext';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    padding: 48px 32px 35px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nfunction TodoHead() {\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n    const dayName = today.toLocaleDateString('ko-KR', {\r\n        weekday: 'long'\r\n    });\r\n    return (\r\n        <TodoHeadBlock>\r\n            <h1>{dateString}</h1>\r\n            <div className=\"day\">{dayName}</div>\r\n            <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n        </TodoHeadBlock>\r\n    );\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport {MdDone, MdDelete} from 'react-icons/md'\r\nimport { useTodoDispatch } from '../../contexts/todo-list/TodoContext';\r\n\r\n// type TodoItemProps = {\r\n//     id: string;\r\n//     done: boolean;\r\n//     text: string;\r\n// }\r\n\r\nconst Remove = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n    display: none;\r\n`;\r\nconst TodoItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${Remove} {\r\n            display: initial;\r\n        }\r\n    }\r\n`;\r\nconst CheckCicle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            border: 1px solid #38d9a9;\r\n            color: #38d9a9;\r\n        `}\r\n`;\r\nconst Text = styled.div`\r\n    flex: 1;\r\n    font-size: 21px;\r\n    color: #495057;\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            color: #ced4da;\r\n        `}\r\n`;\r\n\r\nfunction TodoItem({id, done, text}) {\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => dispatch({type: 'TOGGLE', id});\r\n    const onRemove = () => dispatch({type: 'REMOVE', id});\r\n    return (\r\n        <TodoItemBlock>\r\n            <CheckCicle done={done} onClick={onToggle}>{done && <MdDone />}</CheckCicle>\r\n            <Text done={done}>{text}</Text>\r\n            <Remove onClick={onRemove}>\r\n                <MdDelete />\r\n            </Remove>\r\n        </TodoItemBlock>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoItem);","import styled from 'styled-components';\r\nimport { useTodoState } from '../../contexts/todo-list/TodoContext.js';\r\nimport TodoItem from './TodoItem.js';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList() {\r\n    const todos = useTodoState();\r\n    return (\r\n        <TodoListBlock>\r\n            {todos.map(todo => (\r\n                <TodoItem key={todo.id} id={todo.id} text={todo.text} done={todo.done} />\r\n            ))}\r\n        </TodoListBlock>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n    position: relative;\r\n    background-color: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, .04);\r\n    margin: 96px auto 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({children}:any) {\r\n    return (\r\n        <TodoTemplateBlock>{children}</TodoTemplateBlock>\r\n    );\r\n}\r\n\r\nexport default TodoTemplate;","import { createGlobalStyle } from 'styled-components';\r\nimport { TodoProvider } from '../../contexts/todo-list/TodoContext';\r\nimport TodoCreate from './TodoCreate';\r\nimport TodoHead from './TodoHead.js';\r\nimport TodoList from './TodoList.js';\r\nimport TodoTemplate from './TodoTemplate';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body {\r\n        background-color: #e9ecef;\r\n    }\r\n`;\r\n\r\nfunction TodoListPractise() {\r\n    return (\r\n    <TodoProvider>\r\n        <GlobalStyle />\r\n        <TodoTemplate>\r\n            <TodoHead />\r\n            <TodoList />\r\n            <TodoCreate />\r\n        </TodoTemplate>\r\n    </TodoProvider>\r\n    );\r\n}\r\n\r\nexport default TodoListPractise;","import Users from './components/api-integrate/Users';\nimport TodoListPractise from './components/todo-list/TodoListPractise';\nimport { UsersProvider } from './contexts/api-integrate/UsersContext';\n\nfunction App() {\n  return (\n    <>\n      <UsersProvider>\n        <Users />\n      </UsersProvider>\n      <TodoListPractise/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}